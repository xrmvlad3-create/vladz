version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: izamanagement-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=izamanagement
      - DB_USERNAME=izauser
      - DB_PASSWORD=secure_password_2025
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OLLAMA_BASE_URL=http://ollama:11434
    networks:
      - izamanagement-network
    depends_on:
      - postgres
      - redis
      - ollama

  # Nginx Web Server
  nginx:
    image: nginx:1.25-alpine
    container_name: izamanagement-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - izamanagement-network
    depends_on:
      - app

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: izamanagement-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=izamanagement
      - POSTGRES_USER=izauser
      - POSTGRES_PASSWORD=secure_password_2025
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - izamanagement-network
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: izamanagement-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf:ro
    command: redis-server /etc/redis/redis.conf
    networks:
      - izamanagement-network

  # Ollama AI Service (Local)
  ollama:
    image: ollama/ollama:latest
    container_name: izamanagement-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0
    networks:
      - izamanagement-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Queue Worker
  queue-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: izamanagement-queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=production
      - DB_HOST=postgres
      - REDIS_HOST=redis
    command: php artisan queue:work --tries=3 --max-time=3600
    networks:
      - izamanagement-network
    depends_on:
      - postgres
      - redis

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: izamanagement-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=production
      - DB_HOST=postgres
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction &
        sleep 60
      done"
    networks:
      - izamanagement-network
    depends_on:
      - postgres

  # Elasticsearch (for full-text search)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: izamanagement-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - izamanagement-network

  # Monitoring with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: izamanagement-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin2025
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - izamanagement-network

  # Prometheus (metrics collection)
  prometheus:
    image: prom/prometheus:latest
    container_name: izamanagement-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - izamanagement-network

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: izamanagement-backup
    restart: unless-stopped
    volumes:
      - ./backups:/backups
      - ./docker/backup/backup.sh:/backup.sh:ro
    environment:
      - PGPASSWORD=secure_password_2025
    command: >
      sh -c "while true; do
        sleep 86400 # 24 hours
        /backup.sh
      done"
    networks:
      - izamanagement-network
    depends_on:
      - postgres

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  ollama-data:
    driver: local
  elasticsearch-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  izamanagement-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
